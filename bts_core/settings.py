"""
Django settings for bts_core project.

Generated by 'django-admin startproject' using Django 3.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
from google.cloud import secretmanager
project_id = "507813517891"
db_user_id = "database-username"
db_pass_id = "database-password"
secret_key_id = "secret-key"
secret_version = "latest"

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'bts_asset_db.apps.BtsAssetDbConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'bts_core.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'bts_core.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASE_ROUTERS = ['bts_core.dbrouters.AssetDbRouter']

if os.getenv('GAE_APPLICATION', None):
    client = secretmanager.SecretManagerServiceClient()

    db_user_path = client.secret_version_path(project_id, db_user_id, secret_version)
    db_pass_path = client.secret_version_path(project_id, db_pass_id, secret_version)
    secret_key_path = client.secret_version_path(project_id, secret_key_id, secret_version)

    paths = (db_user_path, db_pass_path, secret_key_path)
    responses = [client.access_secret_version(path).payload.data.decode('UTF-8') for path in paths]
    [db_user, db_pass, secret_key] = responses

    # SECURITY WARNING: keep the secret key used in production secret!
    SECRET_KEY = secret_key

    DEBUG = False

    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': 'bts_core',
            'USER': db_user,
            'PASSWORD': db_pass,
            'HOST': '/cloudsql/bts-pat-website:us-east1:bts-pat-sql',
        },
        'pat': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': 'bts_asset_db_pat',
            'USER': db_user,
            'PASSWORD': db_pass,
            'HOST': '/cloudsql/bts-pat-website:us-east1:bts-pat-sql',
        }
    }
else:
    # Running locally so connect to either a local MySQL instance or connect to
    # Cloud SQL via the proxy. To start the proxy via command line:
    #
    #     $ cloud_sql_proxy -instances=bts-pat-website:us-east1:bts-pat-sql=tcp:3306

    SECRET_KEY = os.environ['BTS_ASSET_DB_SECRET_KEY']

    DEBUG = True

    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': 'bts_core',
            'USER': os.environ['BTS_ASSET_DB_DBUSER'],
            'PASSWORD': os.environ['BTS_ASSET_DB_DBPASS'],
            'HOST': '127.0.0.1',
            'PORT': '3306'
        },
        'pat': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': 'bts_asset_db_pat',
            'USER': os.environ['BTS_ASSET_DB_DBUSER'],
            'PASSWORD': os.environ['BTS_ASSET_DB_DBPASS'],
            'HOST': '127.0.0.1',
            'PORT': '3306'
        }
    }

# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

LOGIN_REDIRECT_URL = '/'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_ROOT = 'static'
STATIC_URL = '/static/'
